{"remainingRequest":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\babel-loader\\lib\\index.js!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\components\\main\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\components\\main\\main.vue","mtime":1594201433990},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\lixindom\\\\2020\\\\uni-app\\\\Hui-Admin-Pro\\u4E00\\u4E2A\\u4F7F\\u7528iView\\u7684\\u524D\\u7AEF\\u6846\\u67B6\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:\\\\lixindom\\\\2020\\\\uni-app\\\\Hui-Admin-Pro\\u4E00\\u4E2A\\u4F7F\\u7528iView\\u7684\\u524D\\u7AEF\\u6846\\u67B6\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport message from \"../message/message\";\nimport darkImg from '@/assets/main/logo-dark.png';\nimport lightImg from '@/assets/main/logo-light.png';\nimport { themeData } from '@/config/config';\nimport Footer from \"@/components/footer/footer\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"main-page\",\n  components: {\n    message: message,\n    Footer: Footer\n  },\n  computed: _objectSpread({}, mapGetters(['routes']), {\n    // 获取vuex 路由数据 用户tag多页签\n    getRouterArrVuex: function getRouterArrVuex() {\n      return this.$store.getters.routerArr;\n    },\n    // 收缩的图标\n    rotateIcon: function rotateIcon() {\n      return ['menu-icon', this.isCollapsed ? 'rotate-icon' : ''];\n    },\n    // 导航收缩\n    menuitemClasses: function menuitemClasses() {\n      return ['menu-item', this.isCollapsed ? 'collapsed-menu' : ''];\n    }\n  }),\n  data: function data() {\n    return {\n      activeName: \"\",\n      // 子导航选中的name\n      isCollapsed: false,\n      // 是否收缩\n      isMaxWindow: false,\n      // 是否最大化窗口\n      routersArr: [],\n      // 路由数据\n      openNames: [],\n      // 导航打开的父栏目\n      transform: 0,\n      // 导航左右方向移动距离\n      tabSwitch: false,\n      // 是否显示左右切换图标\n      userData: {},\n      // 登录用户数据\n      optionDrawer: false,\n      // 是否显示配置抽屉\n      themeType: themeData.themeType ? themeData.themeType : 'dark',\n      // 主题风格\n      logoImg: themeData.themeType === 'dark' ? lightImg : darkImg,\n      // 主题logo图片\n      isTabsShow: themeData.isTabsShow,\n      // 是否显示多页签\n      headMaxWidthLogoImg: darkImg,\n      // 栏目是否通顶logo图片\n      headMaxWidth: themeData.headMaxWidth,\n      // 栏目是否通顶（最大宽度）\n      isRouterViewShow: true // 控制router-view的隐藏与展示\n\n    };\n  },\n  created: function created() {\n    this.setRouterArr();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // 如果没有权限 回到默认首页 防止错误地址程序崩溃 跳转非法路由\n    if (this.$route.meta.hide) {\n      this.$router.push({\n        name: this.$indexPage\n      });\n    } // 页面刷新后 保存打开的路由数据到本地存储\n\n\n    window.addEventListener('unload', this.saveState);\n    this.activeName = this.$route.name;\n    this.openNames = [];\n    this.openNames.push(this.$route.meta.fuName);\n    this.$nextTick(function () {\n      // 重新渲染导航\n      if (_this.$refs.side_menu) {\n        _this.$refs.side_menu.updateOpened(); // this.$refs.side_menu.updateActiveName()\n\n      }\n    });\n  },\n  methods: {\n    // 收缩切换\n    collapsedSider: function collapsedSider() {\n      var _this2 = this;\n\n      this.$refs.side1.toggleCollapse();\n      this.$nextTick(function () {\n        // 重新渲染导航\n        _this2.$refs.side_menu.updateOpened();\n\n        _this2.$refs.side_menu.updateActiveName();\n      });\n    },\n    // 处理路由数据 包含路由角色权限\n    setRouterArr: function setRouterArr() {\n      // 获取用户数据\n      this.userData = this.$store.getters.userData;\n      this.routersArr = JSON.parse(JSON.stringify(this.routes));\n    },\n    // 导航跳转\n    menuNav: function menuNav(name) {\n      this.routerPush(name);\n    },\n    // 父级栏目展开收缩事件\n    open: function open(name) {\n      this.openNames = ['' + name + ''];\n    },\n    // 下拉菜单跳转\n    dropdownNav: function dropdownNav(name) {\n      this.routerPush(name);\n    },\n    // tab切换跳转\n    tabNav: function tabNav(name) {\n      this.routerPush(name);\n    },\n    // 路由跳转\n    routerPush: function routerPush(name) {\n      var _this3 = this;\n\n      this.$router.push({\n        name: name\n      });\n      this.$nextTick(function () {\n        var w = document.getElementById('tabsDiv').offsetWidth;\n        var zw = document.getElementById('tabsNav').offsetWidth;\n\n        if (w > zw) {\n          _this3.tabSwitch = true;\n        }\n      });\n    },\n    // tab关闭\n    tabNavClose: function tabNavClose(item, index) {\n      var _this4 = this;\n\n      var arr = this.$store.getters.routerArr; // 判断是否是首页\n\n      if (item.name !== this.$indexPage) {\n        this.$store.dispatch('tagsView/delRouter', index);\n\n        if (index !== 0) {\n          this.$router.push({\n            name: arr[index - 1].name\n          });\n        }\n      }\n\n      this.$nextTick(function () {\n        var w = document.getElementById('tabsDiv').offsetWidth;\n        var zw = document.getElementById('tabsNav').offsetWidth;\n\n        if (w < zw) {\n          _this4.tabSwitch = false;\n        }\n      });\n    },\n    // tab最右侧下拉框右键选中\n    tabRightClick: function tabRightClick(type) {\n      var arr = this.$store.getters.routerArr;\n      this.tabSwitch = false;\n\n      switch (type) {\n        case 'qt':\n          for (var i = arr.length - 1; i > -1; i--) {\n            if (arr[i].name !== this.activeName) {\n              this.$store.dispatch('tagsView/delRouter', i);\n            }\n          }\n\n          break;\n\n        case 'qb':\n          if (arr.length === 1) {\n            if (this.$route.name !== this.$indexPage) {\n              for (var _i = arr.length - 1; _i > -1; _i--) {\n                this.$store.dispatch('tagsView/delRouter', _i);\n              }\n            }\n          } else {\n            for (var _i2 = arr.length - 1; _i2 > -1; _i2--) {\n              this.$store.dispatch('tagsView/delRouter', _i2);\n            }\n          }\n\n          break;\n      }\n    },\n    // 窗口最大化\n    maxWindow: function maxWindow() {\n      if (this.isMaxWindow) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.webkitExitFullscreen) {\n          document.webkitExitFullscreen();\n        }\n\n        this.isMaxWindow = false;\n      } else {\n        var element = document.documentElement;\n\n        if (element.requestFullscreen) {\n          element.requestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n        } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n        }\n\n        this.isMaxWindow = true;\n      }\n    },\n    // 向左切换\n    tabLeft: function tabLeft() {\n      this.transform = 'translateX(0px)';\n    },\n    // 向右切换\n    tabRight: function tabRight() {\n      var w = document.getElementById('tabsDiv').offsetWidth;\n      var zw = document.getElementById('tabsNav').offsetWidth;\n\n      if (w > zw) {\n        var s = -(w - zw);\n        this.transform = 'translateX(' + s + 'px)';\n      }\n    },\n    // 页面刷新后 将vuex路由数据存储到本地\n    saveState: function saveState() {\n      var arr = this.$store.getters.routerArr;\n      var arr1 = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var v = _step.value;\n          var item = {\n            fullPath: v.fullPath,\n            meta: v.meta,\n            name: v.name,\n            path: v.path\n          };\n          arr1.push(item);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      localStorage.setItem('dataRouter', JSON.stringify(arr1));\n    },\n    // 主题切换\n    themeSwitch: function themeSwitch(type) {\n      if (type === 0) {\n        this.themeType = 'dark';\n        this.logoImg = lightImg;\n      } else {\n        this.themeType = 'light';\n        this.logoImg = darkImg;\n      }\n    },\n    // 页面刷新\n    refresh: function refresh() {\n      var _this5 = this;\n\n      // 先隐藏\n      this.isRouterViewShow = false; // $nextTick() 将回调延迟到下次 DOM 更新循环之后执行\n\n      this.$nextTick(function () {\n        _this5.isRouterViewShow = true;\n      });\n    },\n    // 个人设置功能\n    personalSettings: function () {\n      var _personalSettings = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(name) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(name === 'logout')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.$store.dispatch('user/logout');\n\n              case 3:\n                this.$router.push({\n                  name: this.$loginPage\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function personalSettings(_x) {\n        return _personalSettings.apply(this, arguments);\n      }\n\n      return personalSettings;\n    }()\n  },\n  watch: {\n    // 监听路由跳转\n    $route: function $route() {\n      var _this6 = this;\n\n      this.activeName = this.$route.name;\n      this.openNames = [];\n      this.openNames.push(this.$route.meta.fuName);\n      this.$nextTick(function () {\n        _this6.$refs.side_menu.updateOpened();\n\n        _this6.$refs.side_menu.updateActiveName();\n\n        _this6.saveState();\n      }); // document.title = this.$route.meta.title + ' - Hui Admin Pro'\n    },\n    // 监听路由数组改变\n    getRouterArrVuex: function getRouterArrVuex(val) {\n      var _this7 = this;\n\n      if (val.length < 1) {\n        this.$router.push({\n          name: this.$indexPage\n        });\n      } // 动态监听路由变化 自动滚动多页签导航\n\n\n      this.$nextTick(function () {\n        // 修复退出登录 页面报错\n        if (document.getElementById('tabsNav')) {\n          var zw = document.getElementById('tabsNav').offsetWidth; // 总宽度\n\n          var w = document.getElementById('tabsDiv').offsetWidth; // 导航宽度\n\n          if (w > zw) {\n            var s = -(w - zw);\n            _this7.transform = 'translateX(' + s + 'px)';\n          } else {\n            _this7.tabLeft();\n          }\n        }\n      });\n    }\n  },\n  filters: {}\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"layout-page\">\r\n        <Layout class=\"layout-div\">\r\n            <Sider\r\n                ref=\"side1\"\r\n                hide-trigger\r\n                collapsible\r\n                :collapsed-width=\"78\"\r\n                :width=\"256\"\r\n                v-model=\"isCollapsed\"\r\n                :class=\"themeType==='light'?'themeLight':'themeDark'\"\r\n            >\r\n                <!--:class=\"isCollapsed?'collapsed_left':''\"-->\r\n                <div class=\"logo\" :class=\"headMaxWidth?'headMaxWidth':''\">\r\n                    <img v-if=\"!isCollapsed && headMaxWidth\" :src=\"headMaxWidthLogoImg\" alt=\"\">\r\n                    <img v-if=\"!isCollapsed && !headMaxWidth\" :src=\"logoImg\" alt=\"\">\r\n                    <img v-if=\"isCollapsed\" src=\"../../assets/main/logo-small.png\" alt=\"\">\r\n                </div>\r\n                <Menu\r\n                    :active-name=\"activeName\"\r\n                    :theme=\"themeType\"\r\n                    width=\"auto\"\r\n                    :class=\"menuitemClasses\"\r\n                    :open-names=\"openNames\"\r\n                    accordion\r\n                    ref=\"side_menu\"\r\n                    @on-select=\"menuNav\"\r\n                    @on-open-change=\"open\"\r\n                >\r\n                    <Submenu v-for=\"(item,index) in routersArr\" :key=\"index\" v-if=\"!isCollapsed && !item.meta.hide && !item.meta.singlePage\"\r\n                             :name=\"item.name\">\r\n                        <template slot=\"title\" v-if=\"!isCollapsed\">\r\n                            <Icon :type=\"item.meta.icon\"/>\r\n                            <span class=\"titlespan\">{{item.meta.title}}</span>\r\n                        </template>\r\n                        <MenuItem v-if=\"!isCollapsed && !it.meta.hide\" v-for=\"it in item.children\" :key=\"it.name\" :name=\"it.name\">\r\n                            <span>{{it.meta.title}}</span>\r\n                        </MenuItem>\r\n                    </Submenu>\r\n                    <!--如果只有一个子路由-->\r\n                    <MenuItem v-else-if=\"!isCollapsed && !item.meta.hide && item.meta.singlePage\"\r\n                              v-for=\"it in item.children\" :key=\"index\" class=\"ivu-menu-submenu\"\r\n                              :class=\"{ 'liActive': $route.name === it.name}\" style=\"padding: 0!important;\"\r\n                              :name=\"it.name\">\r\n                        <div class=\"ivu-menu-submenu-title\">\r\n                            <Icon :type=\"item.meta.icon\"/>\r\n                            <span style=\"margin-left: 10px\">{{it.meta.title}}</span>\r\n                        </div>\r\n                    </MenuItem>\r\n                    <Dropdown v-for=\"(item,index) in routersArr\" :key=\"index\" v-if=\"isCollapsed && !item.meta.hide\"\r\n                              class=\"menuSmall\" @on-click=\"dropdownNav\">\r\n                            <span :class=\"item.name === $route.meta.fuName?'active':''\">\r\n                                <Icon :type=\"item.meta.icon\"/>\r\n                            </span>\r\n                        <DropdownMenu slot=\"list\">\r\n                            <template v-for=\"it in item.children\">\r\n                                <DropdownItem v-if=\"!it.meta.hide\" :key=\"it.name\" :name=\"it.name\" :selected=\"it.name === activeName\">{{it.meta.title}}\r\n                                </DropdownItem>\r\n                            </template>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <!--头部-->\r\n                <Header class=\"header flexR\">\r\n                    <div class=\"header_left flexR\">\r\n                        <span>\r\n                            <Icon\r\n                                @click.native=\"collapsedSider\"\r\n                                :class=\"rotateIcon\"\r\n                                type=\"md-menu\"\r\n                                size=\"24\"></Icon>\r\n                        </span>\r\n                        <span @click=\"refresh()\">\r\n                            <Icon type=\"ios-refresh\" size=\"24\"/>\r\n                        </span>\r\n                        <span>\r\n                            <Breadcrumb>\r\n                            <BreadcrumbItem>首页</BreadcrumbItem>\r\n                            <BreadcrumbItem>{{$route.meta.fuTitle}}</BreadcrumbItem>\r\n                            <BreadcrumbItem v-if=\"$route.meta.title !== $route.meta.fuTitle\">{{$route.meta.title}}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        </span>\r\n                    </div>\r\n                    <!--头部右边-->\r\n                    <div class=\"header_right flexR\">\r\n                        <span>\r\n                            <Icon :type=\"isMaxWindow?'md-contract':'md-expand'\" @click=\"maxWindow\" size=\"18\"/>\r\n                        </span>\r\n                        <span>\r\n                            <Dropdown trigger=\"click\">\r\n                                <Badge :count=\"3\">\r\n                                    <Icon type=\"ios-notifications-outline\" size=\"20\"/>\r\n                                </Badge>\r\n                                <DropdownMenu slot=\"list\">\r\n                                    <message></message>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                       </span>\r\n                        <span>\r\n                            <Dropdown @on-click=\"personalSettings\">\r\n                            <a href=\"javascript:void(0)\" style=\"color: #515A6E;\">\r\n                                <img src=\"https://www.zengxiaohui.com/vueImg/avatar1.jpg\" alt=\"\" class=\"ivu-avatar ivu-avatar-small\"\r\n                                     style=\"margin-right: 5px\">\r\n                                {{$store.getters.userData.userName}}\r\n                            </a>\r\n                            <DropdownMenu slot=\"list\">\r\n                                <DropdownItem name=\"grzx\">个人中心</DropdownItem>\r\n                                <DropdownItem name=\"sz\">设置</DropdownItem>\r\n                                <DropdownItem name=\"logout\" divided>退出登陆</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                        </span>\r\n                        <span @click=\"optionDrawer = true\">\r\n                           <Icon type=\"md-more\" size=\"20\"/>\r\n                        </span>\r\n                    </div>\r\n                </Header>\r\n                <!--多页标签-->\r\n                <div v-if=\"isTabsShow\" class=\"tabsNav flexR\">\r\n                    <div class=\"xiala pointer\" v-if=\"tabSwitch\" @click=\"tabLeft\">\r\n                        <Icon type=\"ios-arrow-back\" size=\"16\"/>\r\n                    </div>\r\n                    <div class=\"left flexR\" id=\"tabsNav\">\r\n                        <div class=\"flexR\" id=\"tabsDiv\" :style=\"{transform:transform}\">\r\n                            <div class=\"pointer flexR\" v-for=\"(item,index) in $store.getters.routerArr\" :key=\"item+index\">\r\n                                <span :class=\"activeName === item.name?'active':''\" @click=\"tabNav(item.name)\" >{{item.meta.title}}</span>\r\n                                <Icon v-if=\"item.name !== $indexPage\" type=\"ios-close\" size=\"24\" @click=\"tabNavClose(item,index)\"/>\r\n                                <!--<Dropdown trigger=\"contextMenu\" style=\"margin-left: 5px\" @on-click=\"tabRightClick\" @on-visible-change=\"tabRightStatus($event,item.name)\">\r\n                                    <a href=\"javascript:void(0)\">\r\n                                        <Icon type=\"ios-close\" size=\"24\" @click=\"tabNavClose(item,index)\"/>\r\n                                    </a>\r\n                                    <DropdownMenu slot=\"list\" v-if=\"item.meta.status\">\r\n                                        <DropdownItem :name=\"item.name+'/qt'\">关闭其他</DropdownItem>\r\n                                        <DropdownItem :name=\"item.name+'/left'\">关闭左侧</DropdownItem>\r\n                                        <DropdownItem :name=\"item.name+'/right'\">关闭右侧</DropdownItem>\r\n                                        <DropdownItem :name=\"item.name+'/qb'\">全部关闭</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </Dropdown>-->\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"xiala pointer\" v-if=\"tabSwitch\" @click=\"tabRight\">\r\n                        <Icon type=\"ios-arrow-forward\" size=\"16\"/>\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <Dropdown style=\"margin-left: 5px;\" @on-click=\"tabRightClick\">\r\n                            <div class=\"xiala pointer\">\r\n                                <Icon type=\"ios-arrow-down\"/>\r\n                            </div>\r\n                            <DropdownMenu slot=\"list\">\r\n                                <DropdownItem name=\"qt\">关闭其他</DropdownItem>\r\n                                <!--                                <DropdownItem name=\"left\">关闭左侧</DropdownItem>-->\r\n                                <!--                                <DropdownItem name=\"right\">关闭右侧</DropdownItem>-->\r\n                                <DropdownItem name=\"qb\">全部关闭</DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </div>\r\n                </div>\r\n                <!--内容区-->\r\n                <Content id=\"main_content\"\r\n                    :style=\"{height: (!isTabsShow?'calc(100vh - 64px)':'calc(100vh - 108px)'), margin: (!isTabsShow ? '24px 0 24px 24px':'0 0 24px 24px') }\"\r\n                    class=\"main_content flexC\">\r\n                    <router-view v-if=\"isRouterViewShow\"></router-view>\r\n                    <Footer></Footer>\r\n                </Content>\r\n                <Drawer v-model=\"optionDrawer\" class=\"optionDrawer\">\r\n                    <Divider slot=\"header\" class=\"header\">主题风格设置</Divider>\r\n                    <div class=\"flexR imgs\">\r\n                        <Tooltip content=\"时尚酷黑\" placement=\"top\" transfer :class=\"themeType === 'dark'?'active':''\">\r\n                            <img src=\"../../assets/main/nav-theme-dark.svg\" alt=\"\" @click=\"themeSwitch(0)\">\r\n                        </Tooltip>\r\n                        <Tooltip content=\"极简雅白\" placement=\"top\" transfer :class=\"themeType === 'light'?'active':''\">\r\n                            <img src=\"../../assets/main/nav-theme-light.svg\" alt=\"\" @click=\"themeSwitch(1)\">\r\n                        </Tooltip>\r\n                    </div>\r\n                    <Divider class=\"otherDiv\">其他设置</Divider>\r\n                    <div class=\"kaiguan flexR\">\r\n                        <span>开启多页签</span>\r\n                        <i-switch v-model=\"isTabsShow\" size=\"small\"/>\r\n                    </div>\r\n                    <div class=\"kaiguan flexR\">\r\n                        <span>顶栏通顶</span>\r\n                        <i-switch v-model=\"headMaxWidth\" size=\"small\"/>\r\n                    </div>\r\n                </Drawer>\r\n            </Layout>\r\n        </Layout>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import message from \"../message/message\"\r\n    import darkImg from '@/assets/main/logo-dark.png'\r\n    import lightImg from '@/assets/main/logo-light.png'\r\n    import {themeData} from '@/config/config'\r\n    import Footer from \"@/components/footer/footer\"\r\n    import { mapGetters } from 'vuex'\r\n    export default {\r\n        name: \"main-page\",\r\n        components: {message,Footer},\r\n        computed: {\r\n            ...mapGetters([\r\n                'routes',\r\n            ]),\r\n            // 获取vuex 路由数据 用户tag多页签\r\n            getRouterArrVuex() {\r\n                return this.$store.getters.routerArr\r\n            },\r\n            // 收缩的图标\r\n            rotateIcon() {\r\n                return [\r\n                    'menu-icon',\r\n                    this.isCollapsed ? 'rotate-icon' : ''\r\n                ];\r\n            },\r\n            // 导航收缩\r\n            menuitemClasses() {\r\n                return [\r\n                    'menu-item',\r\n                    this.isCollapsed ? 'collapsed-menu' : ''\r\n                ]\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                activeName: \"\", // 子导航选中的name\r\n                isCollapsed: false, // 是否收缩\r\n                isMaxWindow: false, // 是否最大化窗口\r\n                routersArr: [], // 路由数据\r\n                openNames: [], // 导航打开的父栏目\r\n                transform: 0, // 导航左右方向移动距离\r\n                tabSwitch: false, // 是否显示左右切换图标\r\n                userData: {}, // 登录用户数据\r\n                optionDrawer: false, // 是否显示配置抽屉\r\n                themeType: themeData.themeType ? themeData.themeType : 'dark', // 主题风格\r\n                logoImg: themeData.themeType === 'dark' ? lightImg : darkImg, // 主题logo图片\r\n                isTabsShow: themeData.isTabsShow, // 是否显示多页签\r\n                headMaxWidthLogoImg: darkImg, // 栏目是否通顶logo图片\r\n                headMaxWidth: themeData.headMaxWidth, // 栏目是否通顶（最大宽度）\r\n                isRouterViewShow: true, // 控制router-view的隐藏与展示\r\n            }\r\n        },\r\n        created() {\r\n            this.setRouterArr()\r\n        },\r\n        mounted() {\r\n            // 如果没有权限 回到默认首页 防止错误地址程序崩溃 跳转非法路由\r\n            if (this.$route.meta.hide) {\r\n                this.$router.push({\r\n                        name: this.$indexPage\r\n                    }\r\n                )\r\n            }\r\n            // 页面刷新后 保存打开的路由数据到本地存储\r\n            window.addEventListener('unload', this.saveState)\r\n            this.activeName = this.$route.name\r\n            this.openNames = []\r\n            this.openNames.push(this.$route.meta.fuName)\r\n            this.$nextTick(() => {\r\n                // 重新渲染导航\r\n                if (this.$refs.side_menu) {\r\n                    this.$refs.side_menu.updateOpened()\r\n                    // this.$refs.side_menu.updateActiveName()\r\n                }\r\n            })\r\n        },\r\n        methods: {\r\n            // 收缩切换\r\n            collapsedSider() {\r\n                this.$refs.side1.toggleCollapse();\r\n                this.$nextTick(() => {\r\n                    // 重新渲染导航\r\n                    this.$refs.side_menu.updateOpened()\r\n                    this.$refs.side_menu.updateActiveName()\r\n                })\r\n            },\r\n            // 处理路由数据 包含路由角色权限\r\n            setRouterArr() {\r\n                // 获取用户数据\r\n                this.userData = this.$store.getters.userData\r\n                this.routersArr = JSON.parse(JSON.stringify(this.routes))\r\n            },\r\n            // 导航跳转\r\n            menuNav(name) {\r\n                this.routerPush(name)\r\n            },\r\n            // 父级栏目展开收缩事件\r\n            open(name) {\r\n                this.openNames = ['' + name + '']\r\n            },\r\n            // 下拉菜单跳转\r\n            dropdownNav(name) {\r\n                this.routerPush(name)\r\n            },\r\n            // tab切换跳转\r\n            tabNav(name) {\r\n                this.routerPush(name)\r\n            },\r\n            // 路由跳转\r\n            routerPush(name) {\r\n                this.$router.push({\r\n                    name: name\r\n                })\r\n                this.$nextTick(() => {\r\n                    let w = document.getElementById('tabsDiv').offsetWidth\r\n                    let zw = document.getElementById('tabsNav').offsetWidth\r\n                    if (w > zw) {\r\n                        this.tabSwitch = true\r\n                    }\r\n                })\r\n            },\r\n            // tab关闭\r\n            tabNavClose(item, index) {\r\n                let arr = this.$store.getters.routerArr\r\n                // 判断是否是首页\r\n                if (item.name !== this.$indexPage) {\r\n                    this.$store.dispatch('tagsView/delRouter', index)\r\n                    if (index !== 0) {\r\n                        this.$router.push({\r\n                            name: arr[index - 1].name\r\n                        })\r\n                    }\r\n                }\r\n                this.$nextTick(() => {\r\n                    let w = document.getElementById('tabsDiv').offsetWidth\r\n                    let zw = document.getElementById('tabsNav').offsetWidth\r\n                    if (w < zw) {\r\n                        this.tabSwitch = false\r\n                    }\r\n                })\r\n            },\r\n            // tab最右侧下拉框右键选中\r\n            tabRightClick(type) {\r\n                let arr = this.$store.getters.routerArr\r\n                this.tabSwitch = false\r\n                switch (type) {\r\n                    case 'qt':\r\n                        for (let i = arr.length - 1; i > -1; i--) {\r\n                            if (arr[i].name !== this.activeName) {\r\n                                this.$store.dispatch('tagsView/delRouter', i)\r\n                            }\r\n                        }\r\n                        break\r\n                    case 'qb':\r\n                        if(arr.length === 1) {\r\n                            if(this.$route.name !== this.$indexPage) {\r\n                                for (let i = arr.length - 1; i > -1; i--) {\r\n                                    this.$store.dispatch('tagsView/delRouter', i)\r\n                                }\r\n                            }\r\n                        } else {\r\n                            for (let i = arr.length - 1; i > -1; i--) {\r\n                                this.$store.dispatch('tagsView/delRouter', i)\r\n                            }\r\n                        }\r\n                        break\r\n                }\r\n            },\r\n            // 窗口最大化\r\n            maxWindow() {\r\n                if (this.isMaxWindow) {\r\n                    if (document.exitFullscreen) {\r\n                        document.exitFullscreen();\r\n                    } else if (document.mozCancelFullScreen) {\r\n                        document.mozCancelFullScreen();\r\n                    } else if (document.webkitExitFullscreen) {\r\n                        document.webkitExitFullscreen();\r\n                    }\r\n                    this.isMaxWindow = false\r\n                } else {\r\n                    let element = document.documentElement\r\n                    if (element.requestFullscreen) {\r\n                        element.requestFullscreen();\r\n                    } else if (element.mozRequestFullScreen) {\r\n                        element.mozRequestFullScreen();\r\n                    } else if (element.webkitRequestFullscreen) {\r\n                        element.webkitRequestFullscreen();\r\n                    } else if (element.msRequestFullscreen) {\r\n                        element.msRequestFullscreen();\r\n                    }\r\n                    this.isMaxWindow = true\r\n                }\r\n            },\r\n            // 向左切换\r\n            tabLeft() {\r\n                this.transform = 'translateX(0px)'\r\n            },\r\n            // 向右切换\r\n            tabRight() {\r\n                let w = document.getElementById('tabsDiv').offsetWidth\r\n                let zw = document.getElementById('tabsNav').offsetWidth\r\n                if (w > zw) {\r\n                    let s = -(w - zw)\r\n                    this.transform = 'translateX(' + s + 'px)'\r\n                }\r\n            },\r\n            // 页面刷新后 将vuex路由数据存储到本地\r\n            saveState() {\r\n                let arr = this.$store.getters.routerArr\r\n                let arr1 = []\r\n                for (let v of arr) {\r\n                    let item = {\r\n                        fullPath: v.fullPath,\r\n                        meta: v.meta,\r\n                        name: v.name,\r\n                        path: v.path\r\n                    }\r\n                    arr1.push(item)\r\n                }\r\n                localStorage.setItem('dataRouter', JSON.stringify(arr1))\r\n            },\r\n            // 主题切换\r\n            themeSwitch(type) {\r\n                if (type === 0) {\r\n                    this.themeType = 'dark'\r\n                    this.logoImg = lightImg\r\n                } else {\r\n                    this.themeType = 'light'\r\n                    this.logoImg = darkImg\r\n                }\r\n            },\r\n            // 页面刷新\r\n            refresh() {\r\n                // 先隐藏\r\n                this.isRouterViewShow = false\r\n                // $nextTick() 将回调延迟到下次 DOM 更新循环之后执行\r\n                this.$nextTick(() => {\r\n                    this.isRouterViewShow = true\r\n                })\r\n            },\r\n            // 个人设置功能\r\n            async personalSettings(name) {\r\n                if (name === 'logout') {\r\n                    await this.$store.dispatch('user/logout')\r\n                    this.$router.push({\r\n                        name: this.$loginPage\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        watch: {\r\n            // 监听路由跳转\r\n            $route() {\r\n                this.activeName = this.$route.name\r\n                this.openNames = []\r\n                this.openNames.push(this.$route.meta.fuName)\r\n                this.$nextTick(() => {\r\n                    this.$refs.side_menu.updateOpened()\r\n                    this.$refs.side_menu.updateActiveName()\r\n                    this.saveState()\r\n                })\r\n                // document.title = this.$route.meta.title + ' - Hui Admin Pro'\r\n            },\r\n            // 监听路由数组改变\r\n            getRouterArrVuex(val) {\r\n                if (val.length < 1) {\r\n                    this.$router.push({\r\n                        name: this.$indexPage\r\n                    })\r\n                }\r\n                // 动态监听路由变化 自动滚动多页签导航\r\n                this.$nextTick(()=>{\r\n                  // 修复退出登录 页面报错\r\n                  if(document.getElementById('tabsNav')) {\r\n                    let zw = document.getElementById('tabsNav').offsetWidth // 总宽度\r\n                    let w = document.getElementById('tabsDiv').offsetWidth // 导航宽度\r\n                    if (w > zw) {\r\n                      let s = -(w - zw)\r\n                      this.transform = 'translateX(' + s + 'px)'\r\n                    } else {\r\n                      this.tabLeft()\r\n                    }\r\n                  }\r\n                })\r\n            }\r\n        },\r\n        filters: {}\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    @import \"main\";\r\n</style>\r\n"],"sourceRoot":"src/components/main"}]}