{"remainingRequest":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\babel-loader\\lib\\index.js!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\views\\form\\advanced_form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\views\\form\\advanced_form.vue","mtime":1594201434131},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar moment = require('moment');\n\nimport Editor from \"../../components/editor/editor\";\nexport default {\n  name: \"advanced_form\",\n  components: {\n    Editor: Editor\n  },\n  data: function data() {\n    // 时间自定义校验\n    var checkTime = function checkTime(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请选择时间'));\n      } else {\n        callback();\n      }\n    }; // 作者校验\n\n\n    var checkAuthor = function checkAuthor(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请选择作者'));\n      } else {\n        callback();\n      }\n    }; // 正文校验\n\n\n    var checkContent = function checkContent(rule, value, callback) {\n      if (value === '<p><br></p>' || !value) {\n        callback(new Error('请输入正文内容'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      json: {\n        title: '',\n        // 标题\n        attributes: [],\n        // 属性\n        titleColor: '#333333',\n        // 标题颜色\n        subtitle: '',\n        // 副标题\n        informationAttribute: true,\n        // 信息属性 默认审核\n        recommend: '0',\n        // 推荐\n        headline: '0',\n        // 头条\n        keyword: '',\n        // 关键字\n        externalLink: '',\n        // 外部链接\n        time: moment().format('YYYY-MM-DD hh:mm:ss'),\n        // 默认当前时间\n        introduction: '',\n        // 简介\n        author: '',\n        // 作者\n        source: '',\n        // 信息来源\n        content: ''\n      },\n      checkdate: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        time: [{\n          required: true,\n          validator: checkTime\n        }],\n        author: [{\n          required: true,\n          validator: checkAuthor\n        }],\n        content: [{\n          required: true,\n          validator: checkContent\n        }]\n      },\n      // 数据校验\n      recommendData: [{\n        value: '0',\n        label: '不推荐'\n      }, {\n        value: '1',\n        label: '一级推荐'\n      }, {\n        value: '2',\n        label: '二级推荐'\n      }, {\n        value: '3',\n        label: '三级推荐'\n      }, {\n        value: '4',\n        label: '四级推荐'\n      }],\n      // 推荐数据\n      headlineData: [{\n        value: '0',\n        label: '非头条'\n      }, {\n        value: '1',\n        label: '一级头条'\n      }, {\n        value: '2',\n        label: '二级头条'\n      }, {\n        value: '3',\n        label: '三级头条'\n      }, {\n        value: '4',\n        label: '四级头条'\n      }],\n      // 头条数据\n      keywordInfo: '(关键词，多个请用\",\"隔开)',\n      authorData: [{\n        id: 1,\n        name: '曾小晖'\n      }, {\n        id: 2,\n        name: '晖小晖'\n      }, {\n        id: 3,\n        name: '曾小曾'\n      }],\n      // 作者数据\n      sourceData: [{\n        id: 1,\n        name: '原创'\n      }, {\n        id: 2,\n        name: '转载'\n      }] // 信息来源数据\n\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {},\n  methods: {\n    // 校验\n    handleSubmit: function handleSubmit(name) {\n      var _this = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this.$Message.success('校验通过!');\n        } else {\n          _this.$Message.error('请完善必填项!');\n        }\n      });\n    },\n    // 重置\n    handleReset: function handleReset(name) {\n      this.$refs[name].resetFields();\n      this.json.recommend = '0'; // 推荐\n\n      this.json.headline = '0'; // 头条\n\n      this.json.keyword = ''; // 关键字\n\n      this.json.time = ''; // 发布时间\n\n      this.json.externalLink = ''; // 外部链接\n\n      this.$refs.Editor.onClear(); // 清空编辑器\n    }\n  },\n  watch: {},\n  filters: {}\n};",{"version":3,"sources":["advanced_form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,OAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA;AACA,QAAA,SAAA,GAAA,SAAA,SAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KANA,CAFA,CASA;;;AACA,QAAA,WAAA,GAAA,SAAA,WAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KANA,CAVA,CAiBA;;;AACA,QAAA,YAAA,GAAA,SAAA,YAAA,CAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA;AACA,UAAA,KAAA,KAAA,aAAA,IAAA,CAAA,KAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA;AACA;AACA,KANA;;AAOA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AACA;AACA,QAAA,UAAA,EAAA,EAFA;AAEA;AACA,QAAA,UAAA,EAAA,SAHA;AAGA;AACA,QAAA,QAAA,EAAA,EAJA;AAIA;AAEA,QAAA,oBAAA,EAAA,IANA;AAMA;AACA,QAAA,SAAA,EAAA,GAPA;AAOA;AACA,QAAA,QAAA,EAAA,GARA;AAQA;AACA,QAAA,OAAA,EAAA,EATA;AASA;AACA,QAAA,YAAA,EAAA,EAVA;AAUA;AAEA,QAAA,IAAA,EAAA,MAAA,GAAA,MAAA,CAAA,qBAAA,CAZA;AAYA;AACA,QAAA,YAAA,EAAA,EAbA;AAaA;AACA,QAAA,MAAA,EAAA,EAdA;AAcA;AACA,QAAA,MAAA,EAAA,EAfA;AAeA;AACA,QAAA,OAAA,EAAA;AAhBA,OADA;AAmBA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,IAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SADA,CAJA;AAOA,QAAA,MAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SADA,CAPA;AAUA,QAAA,OAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,SAAA,EAAA;AAAA,SADA;AAVA,OAnBA;AAgCA;AACA,MAAA,aAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAjBA,CAjCA;AAsDA;AACA,MAAA,YAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OATA,EAaA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAbA,EAiBA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAjBA,CAvDA;AA4EA;AACA,MAAA,WAAA,EAAA,iBA7EA;AA8EA,MAAA,UAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OALA,EASA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OATA,CA9EA;AA2FA;AACA,MAAA,UAAA,EAAA,CACA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OADA,EAKA;AACA,QAAA,EAAA,EAAA,CADA;AAEA,QAAA,IAAA,EAAA;AAFA,OALA,CA5FA,CAqGA;;AArGA,KAAA;AAuGA,GAnIA;AAoIA,EAAA,OApIA,qBAoIA,CACA,CArIA;AAsIA,EAAA,OAtIA,qBAsIA,CACA,CAvIA;AAwIA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,YAFA,wBAEA,IAFA,EAEA;AAAA;;AACA,WAAA,KAAA,CAAA,IAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,SAAA;AACA;AACA,OANA;AAOA,KAVA;AAWA;AACA,IAAA,WAZA,uBAYA,IAZA,EAYA;AACA,WAAA,KAAA,CAAA,IAAA,EAAA,WAAA;AACA,WAAA,IAAA,CAAA,SAAA,GAAA,GAAA,CAFA,CAEA;;AACA,WAAA,IAAA,CAAA,QAAA,GAAA,GAAA,CAHA,CAGA;;AACA,WAAA,IAAA,CAAA,OAAA,GAAA,EAAA,CAJA,CAIA;;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CALA,CAKA;;AACA,WAAA,IAAA,CAAA,YAAA,GAAA,EAAA,CANA,CAMA;;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,OAAA,GAPA,CAOA;AACA;AApBA,GAxIA;AA8JA,EAAA,KAAA,EAAA,EA9JA;AA+JA,EAAA,OAAA,EAAA;AA/JA,CAAA","sourcesContent":["/**\r\n*   @description 基础表单\r\n*   @author Xiaohui Zeng\r\n*   @date 2019/10/12\r\n*/\r\n<template>\r\n    <div class=\"advanced_form-page flexC\">\r\n        <div class=\"pageHead flexC\">\r\n            <p>高级表单</p>\r\n            <p>高级表单用于一次性提交大量信息，本页面用于文章发布等复杂的业务交互。</p>\r\n        </div>\r\n        <div class=\"pageContent flexC\">\r\n            <Form ref=\"json\" :model=\"json\" :rules=\"checkdate\" :label-width=\"90\">\r\n                <FormItem label=\"标题\" prop=\"title\" style=\"margin: 0\">\r\n                    <Input v-model=\"json.title\" placeholder=\"请输入标题\" maxlength=\"100\" show-word-limit></Input>\r\n                </FormItem>\r\n                <FormItem style=\"margin: 15px 0 24px 0;\">\r\n                    <div class=\"flexR\">\r\n                        <div class=\"flexR\">\r\n                            <span style=\"margin-right: 10px\">属性: </span>\r\n                            <CheckboxGroup v-model=\"json.attributes\" size=\"small\">\r\n                                <Checkbox label=\"粗体\"></Checkbox>\r\n                                <Checkbox label=\"斜体\"></Checkbox>\r\n                                <Checkbox label=\"删除线\"></Checkbox>\r\n                            </CheckboxGroup>\r\n                        </div>\r\n                        <div class=\"flexR\" style=\"margin-left: 20px\">\r\n                            <span style=\"margin-right: 10px\">颜色: </span>\r\n                            <ColorPicker v-model=\"json.titleColor\" size=\"small\"/>\r\n                        </div>\r\n                    </div>\r\n                </FormItem>\r\n                <FormItem label=\"副标题\" prop=\"subtitle\">\r\n                    <Input v-model=\"json.subtitle\" placeholder=\"请输入副标题\"></Input>\r\n                </FormItem>\r\n\r\n                <FormItem label=\"特殊属性\" prop=\"specialAttribute\" class=\"zdyFormItem\">\r\n                    <div class=\"flexR\">\r\n                        <div class=\"flexR\" style=\"min-width: 150px\">\r\n                            <span style=\"margin-right: 10px\">信息属性: </span>\r\n                            <Checkbox v-model=\"json.informationAttribute\" label=\"审核\">审核</Checkbox>\r\n                        </div>\r\n                        <div class=\"flexR\" style=\"margin: 0 20px\">\r\n                            <span style=\"margin-right: 10px\">推荐: </span>\r\n                            <Select v-model=\"json.recommend\" style=\"width:200px\">\r\n                                <Option v-for=\"item in recommendData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                            </Select>\r\n                        </div>\r\n                        <div class=\"flexR\">\r\n                            <span style=\"margin-right: 10px\">头条: </span>\r\n                            <Select v-model=\"json.headline\" style=\"width:200px\">\r\n                                <Option v-for=\"item in headlineData\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                            </Select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flexR\">\r\n                        <div class=\"flexR\" style=\"width: 100%;\">\r\n                            <span style=\"margin-right: 10px;min-width: 60px;\">关键字: </span>\r\n                            <Input v-model=\"json.keyword\" style=\"width: calc(100% - 60px)\" :placeholder=\"keywordInfo\"></Input>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flexR\">\r\n                        <div class=\"flexR\" style=\"width: 100%;\">\r\n                            <span style=\"margin-right: 10px;min-width: 60px;\">外部链接: </span>\r\n                            <Input v-model=\"json.externalLink\" style=\"width: calc(100% - 60px)\" placeholder=\"(填写后信息连接地址将为此链接)\"></Input>\r\n                        </div>\r\n                    </div>\r\n                </FormItem>\r\n\r\n                <FormItem label=\"发布时间\" prop=\"time\">\r\n                    <DatePicker v-model=\"json.time\" format=\"yyyy-MM-dd hh:mm:ss\" type=\"datetime\" placement=\"bottom-start\" placeholder=\"请选择时间\"style=\"width: 35%\"></DatePicker>\r\n                </FormItem>\r\n                <FormItem label=\"内容简介\" prop=\"introduction\">\r\n                    <Input v-model=\"json.introduction\" maxlength=\"300\" show-word-limit type=\"textarea\" :autosize=\"{minRows: 3,maxRows: 5}\" placeholder=\"请输入内容简介...\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"作者\" prop=\"author\">\r\n                    <div class=\"flexR\">\r\n                        <div class=\"flexR\" style=\"width: 100%;\">\r\n                            <Select v-model=\"json.author\" filterable placeholder=\"搜索/选择作者\">\r\n                                <Option v-for=\"item in authorData\" :value=\"item.id\" :key=\"item.id\">{{ item.name }}</Option>\r\n                            </Select>\r\n                            <Button style=\"margin-left: 10px\">增加作者</Button>\r\n                        </div>\r\n                    </div>\r\n                </FormItem>\r\n                <FormItem label=\"信息来源\" prop=\"source\">\r\n                    <div class=\"flexR\">\r\n                        <div class=\"flexR\" style=\"width: 100%;\">\r\n                            <Select v-model=\"json.source\" placeholder=\"选择来源\" style=\"width: 204px\">\r\n                                <Option v-for=\"item in sourceData\" :value=\"item.id\" :key=\"item.id\">{{ item.name }}</Option>\r\n                            </Select>\r\n                            <Button style=\"margin-left: 10px\">增加来源</Button>\r\n                        </div>\r\n                    </div>\r\n                </FormItem>\r\n                <FormItem label=\"正文\" prop=\"content\" class=\"editor\">\r\n                    <Editor ref=\"Editor\" v-model=\"json.content\"></Editor>\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" @click=\"handleSubmit('json')\">提交</Button>\r\n                    <Button @click=\"handleReset('json')\" style=\"margin-left: 8px\">重置</Button>\r\n                </FormItem>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    let moment = require('moment')\r\n    import Editor from \"../../components/editor/editor\";\r\n    export default {\r\n        name: \"advanced_form\",\r\n        components:{Editor},\r\n        data() {\r\n            // 时间自定义校验\r\n            const checkTime = (rule, value, callback) => {\r\n                if (!value) {\r\n                    callback(new Error('请选择时间'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            // 作者校验\r\n            const checkAuthor = (rule, value, callback) => {\r\n                if (!value) {\r\n                    callback(new Error('请选择作者'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            // 正文校验\r\n            const checkContent = (rule, value, callback) => {\r\n                if (value === '<p><br></p>' || !value) {\r\n                    callback(new Error('请输入正文内容'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            return {\r\n                json: {\r\n                    title: '', // 标题\r\n                    attributes: [], // 属性\r\n                    titleColor: '#333333', // 标题颜色\r\n                    subtitle: '', // 副标题\r\n\r\n                    informationAttribute: true, // 信息属性 默认审核\r\n                    recommend: '0', // 推荐\r\n                    headline: '0', // 头条\r\n                    keyword: '', // 关键字\r\n                    externalLink: '', // 外部链接\r\n\r\n                    time: moment().format('YYYY-MM-DD hh:mm:ss'), // 默认当前时间\r\n                    introduction: '', // 简介\r\n                    author: '', // 作者\r\n                    source: '', // 信息来源\r\n                    content: ''\r\n                },\r\n                checkdate: {\r\n                    title: [\r\n                        { required: true, message: '请输入标题', trigger: 'blur' }\r\n                    ],\r\n                    time: [\r\n                        { required: true, validator: checkTime}\r\n                    ],\r\n                    author: [\r\n                        { required: true, validator: checkAuthor }\r\n                    ],\r\n                    content: [\r\n                        { required: true, validator: checkContent }\r\n                    ]\r\n                }, // 数据校验\r\n                recommendData: [\r\n                    {\r\n                        value: '0',\r\n                        label: '不推荐'\r\n                    },\r\n                    {\r\n                        value: '1',\r\n                        label: '一级推荐'\r\n                    },\r\n                    {\r\n                        value: '2',\r\n                        label: '二级推荐'\r\n                    },\r\n                    {\r\n                        value: '3',\r\n                        label: '三级推荐'\r\n                    },\r\n                    {\r\n                        value: '4',\r\n                        label: '四级推荐'\r\n                    }\r\n                ], // 推荐数据\r\n                headlineData: [\r\n                    {\r\n                        value: '0',\r\n                        label: '非头条'\r\n                    },\r\n                    {\r\n                        value: '1',\r\n                        label: '一级头条'\r\n                    },\r\n                    {\r\n                        value: '2',\r\n                        label: '二级头条'\r\n                    },\r\n                    {\r\n                        value: '3',\r\n                        label: '三级头条'\r\n                    },\r\n                    {\r\n                        value: '4',\r\n                        label: '四级头条'\r\n                    }\r\n                ], // 头条数据\r\n                keywordInfo: '(关键词，多个请用\",\"隔开)',\r\n                authorData: [\r\n                    {\r\n                        id: 1,\r\n                        name: '曾小晖'\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: '晖小晖'\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: '曾小曾'\r\n                    }\r\n                ], // 作者数据\r\n                sourceData: [\r\n                    {\r\n                        id: 1,\r\n                        name: '原创'\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: '转载'\r\n                    }\r\n                ], // 信息来源数据\r\n            }\r\n        },\r\n        created() {\r\n        },\r\n        mounted() {\r\n        },\r\n        methods: {\r\n            // 校验\r\n            handleSubmit (name) {\r\n                this.$refs[name].validate((valid) => {\r\n                    if (valid) {\r\n                        this.$Message.success('校验通过!');\r\n                    } else {\r\n                        this.$Message.error('请完善必填项!');\r\n                    }\r\n                })\r\n            },\r\n            // 重置\r\n            handleReset (name) {\r\n                this.$refs[name].resetFields();\r\n                this.json.recommend = '0' // 推荐\r\n                this.json.headline = '0' // 头条\r\n                this.json.keyword = '' // 关键字\r\n                this.json.time = '' // 发布时间\r\n                this.json.externalLink = '' // 外部链接\r\n                this.$refs.Editor.onClear() // 清空编辑器\r\n            }\r\n        },\r\n        watch: {},\r\n        filters: {}\r\n    }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n    @import \"css/advanced_form\";\r\n</style>"],"sourceRoot":"src/views/form"}]}