{"remainingRequest":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\babel-loader\\lib\\index.js!D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\store\\modules\\tagsView.js","dependencies":[{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\store\\modules\\tagsView.js","mtime":1594201434058},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { indexPage } from '@/config/config';\nvar state = {\n  // 已打开的路由数据\n  routerArr: [] // localStorage.getItem('dataRouter') ? JSON.parse(localStorage.getItem('dataRouter')) :\n\n};\nvar mutations = {\n  setRouterArr: function setRouterArr(state, data) {\n    // 设置路由\n    state.routerArr = data;\n  },\n  pushRouterArr: function pushRouterArr(state, data) {\n    // 增加路由\n    var flag = state.routerArr.some(function (r) {\n      return r.path === data.path;\n    });\n\n    if (!flag) {\n      // 如果是默认主页 就放到第一个\n      if (data.name === indexPage) {\n        state.routerArr.unshift(data);\n      } else {\n        state.routerArr.push(data);\n      }\n    }\n  },\n  delRouterArr: function delRouterArr(state, index) {\n    // 删除路由\n    state.routerArr.splice(index, 1);\n  }\n};\nvar actions = {\n  setRouterArr: function setRouterArr(context, data) {\n    // 设置路由\n    context.commit('setRouterArr', data);\n  },\n  pushRouter: function pushRouter(context, data) {\n    // 增加路由\n    context.commit('pushRouterArr', data);\n  },\n  delRouter: function delRouter(context, index) {\n    // 删除路由\n    context.commit('delRouterArr', index);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["D:\\lixindom\\2020\\uni-app\\Hui-Admin-Pro一个使用iView的前端框架\\src\\store\\modules\\tagsView.js"],"names":["indexPage","state","routerArr","mutations","setRouterArr","data","pushRouterArr","flag","some","r","path","name","unshift","push","delRouterArr","index","splice","actions","context","commit","pushRouter","delRouter","namespaced"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,iBAAxB;AACA,IAAMC,KAAK,GAAG;AACV;AACAC,EAAAA,SAAS,EAAE,EAFD,CAEI;;AAFJ,CAAd;AAKA,IAAMC,SAAS,GAAG;AACdC,EAAAA,YADc,wBACDH,KADC,EACMI,IADN,EACY;AAAE;AACxBJ,IAAAA,KAAK,CAACC,SAAN,GAAkBG,IAAlB;AACH,GAHa;AAIdC,EAAAA,aAJc,yBAIAL,KAJA,EAIOI,IAJP,EAIa;AAAE;AACzB,QAAME,IAAI,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAWL,IAAI,CAACK,IAApB;AAAA,KAAtB,CAAb;;AACA,QAAG,CAACH,IAAJ,EAAU;AACN;AACA,UAAGF,IAAI,CAACM,IAAL,KAAcX,SAAjB,EAA4B;AACxBC,QAAAA,KAAK,CAACC,SAAN,CAAgBU,OAAhB,CAAwBP,IAAxB;AACH,OAFD,MAEO;AACHJ,QAAAA,KAAK,CAACC,SAAN,CAAgBW,IAAhB,CAAqBR,IAArB;AACH;AACJ;AACJ,GAda;AAedS,EAAAA,YAfc,wBAeDb,KAfC,EAeMc,KAfN,EAea;AAAE;AACzBd,IAAAA,KAAK,CAACC,SAAN,CAAgBc,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;AACH;AAjBa,CAAlB;AAoBA,IAAME,OAAO,GAAG;AACZb,EAAAA,YADY,wBACCc,OADD,EACUb,IADV,EACgB;AAAE;AAC1Ba,IAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+Bd,IAA/B;AACH,GAHW;AAIZe,EAAAA,UAJY,sBAIDF,OAJC,EAIQb,IAJR,EAIc;AAAE;AACxBa,IAAAA,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgCd,IAAhC;AACH,GANW;AAOZgB,EAAAA,SAPY,qBAOFH,OAPE,EAOOH,KAPP,EAOc;AAAE;AACxBG,IAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+BJ,KAA/B;AACH;AATW,CAAhB;AAYA,eAAe;AACXO,EAAAA,UAAU,EAAE,IADD;AAEXrB,EAAAA,KAAK,EAALA,KAFW;AAGXE,EAAAA,SAAS,EAATA,SAHW;AAIXc,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import {indexPage} from '@/config/config'\r\nconst state = {\r\n    // 已打开的路由数据\r\n    routerArr: [] // localStorage.getItem('dataRouter') ? JSON.parse(localStorage.getItem('dataRouter')) :\r\n}\r\n\r\nconst mutations = {\r\n    setRouterArr(state, data) { // 设置路由\r\n        state.routerArr = data\r\n    },\r\n    pushRouterArr(state, data) { // 增加路由\r\n        const flag = state.routerArr.some(r => r.path === data.path)\r\n        if(!flag) {\r\n            // 如果是默认主页 就放到第一个\r\n            if(data.name === indexPage) {\r\n                state.routerArr.unshift(data)\r\n            } else {\r\n                state.routerArr.push(data)\r\n            }\r\n        }\r\n    },\r\n    delRouterArr(state, index) { // 删除路由\r\n        state.routerArr.splice(index, 1)\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    setRouterArr(context, data) { // 设置路由\r\n        context.commit('setRouterArr', data);\r\n    },\r\n    pushRouter(context, data) { // 增加路由\r\n        context.commit('pushRouterArr', data);\r\n    },\r\n    delRouter(context, index) { // 删除路由\r\n        context.commit('delRouterArr', index);\r\n    }\r\n}\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state,\r\n    mutations,\r\n    actions\r\n}\r\n"]}]}